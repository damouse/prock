0 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
1 -----------------------------------------------------
AssignmentNode()
  # identifiers: assign, assignment, assignment_, assignmentnode
  operator=''
  target ->
    NameNode()
      # identifiers: name, name_, namenode
      value='a'
  value ->
    IntNode()
      # identifiers: int, int_, intnode
      value='1'
2 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
3 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
4 -----------------------------------------------------
CommentNode()
  # identifiers: comment, comment_, commentnode
  value='#2: addition'
5 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
6 -----------------------------------------------------
AssignmentNode()
  # identifiers: assign, assignment, assignment_, assignmentnode
  operator=''
  target ->
    NameNode()
      # identifiers: name, name_, namenode
      value='b'
  value ->
    BinaryOperatorNode()
      # identifiers: binary_operator, binary_operator_, binaryoperator, binaryoperatornode
      value='+'
      first ->
        IntNode()
          # identifiers: int, int_, intnode
          value='1'
      second ->
        NameNode()
          # identifiers: name, name_, namenode
          value='a'
7 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
8 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
9 -----------------------------------------------------
CommentNode()
  # identifiers: comment, comment_, commentnode
  value='# #3: subtraction'
10 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
11 -----------------------------------------------------
AssignmentNode()
  # identifiers: assign, assignment, assignment_, assignmentnode
  operator=''
  target ->
    NameNode()
      # identifiers: name, name_, namenode
      value='c'
  value ->
    BinaryOperatorNode()
      # identifiers: binary_operator, binary_operator_, binaryoperator, binaryoperatornode
      value='-'
      first ->
        IntNode()
          # identifiers: int, int_, intnode
          value='1'
      second ->
        NameNode()
          # identifiers: name, name_, namenode
          value='b'
12 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
13 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
14 -----------------------------------------------------
CommentNode()
  # identifiers: comment, comment_, commentnode
  value='# #4: multiplication'
15 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
16 -----------------------------------------------------
AssignmentNode()
  # identifiers: assign, assignment, assignment_, assignmentnode
  operator=''
  target ->
    NameNode()
      # identifiers: name, name_, namenode
      value='d'
  value ->
    BinaryOperatorNode()
      # identifiers: binary_operator, binary_operator_, binaryoperator, binaryoperatornode
      value='*'
      first ->
        NameNode()
          # identifiers: name, name_, namenode
          value='c'
      second ->
        IntNode()
          # identifiers: int, int_, intnode
          value='2'
17 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
18 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
19 -----------------------------------------------------
CommentNode()
  # identifiers: comment, comment_, commentnode
  value='# #5: division'
20 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
21 -----------------------------------------------------
AssignmentNode()
  # identifiers: assign, assignment, assignment_, assignmentnode
  operator=''
  target ->
    NameNode()
      # identifiers: name, name_, namenode
      value='e'
  value ->
    BinaryOperatorNode()
      # identifiers: binary_operator, binary_operator_, binaryoperator, binaryoperatornode
      value='/'
      first ->
        NameNode()
          # identifiers: name, name_, namenode
          value='d'
      second ->
        IntNode()
          # identifiers: int, int_, intnode
          value='2'
22 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
23 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
24 -----------------------------------------------------
CommentNode()
  # identifiers: comment, comment_, commentnode
  value='#6: if'
25 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
26 -----------------------------------------------------
IfelseblockNode()
  # identifiers: ifelseblock, ifelseblock_, ifelseblocknode
  value ->
    * IfNode()
        # identifiers: if, if_, ifnode
        test ->
          ComparisonNode()
            # identifiers: comparison, comparison_, comparisonnode
            first ->
              NameNode()
                # identifiers: name, name_, namenode
                value='a'
            value ->
              ComparisonOperatorNode()
                # identifiers: comparison_operator, comparison_operator_, comparisonoperator, comparisonoperatornode
                first='is'
                second=''
            second ->
              IntNode()
                # identifiers: int, int_, intnode
                value='1'
        value ->
          * AssignmentNode()
              # identifiers: assign, assignment, assignment_, assignmentnode
              operator=''
              target ->
                NameNode()
                  # identifiers: name, name_, namenode
                  value='f'
              value ->
                IntNode()
                  # identifiers: int, int_, intnode
                  value='1'
    * ElseNode()
        # identifiers: else, else_, elsenode
        value ->
          * AssignmentNode()
              # identifiers: assign, assignment, assignment_, assignmentnode
              operator=''
              target ->
                NameNode()
                  # identifiers: name, name_, namenode
                  value='f'
              value ->
                IntNode()
                  # identifiers: int, int_, intnode
                  value='2'
          * EndlNode()
              # identifiers: endl, endl_, endlnode
              value='\n'
              indent=''
          * CommentNode()
              # identifiers: comment, comment_, commentnode
              value='# #7: loop'
27 -----------------------------------------------------
WhileNode()
  # identifiers: while, while_, whilenode
  test ->
    NameNode()
      # identifiers: name, name_, namenode
      value='True'
  else ->
    None
  value ->
    * AssignmentNode()
        # identifiers: assign, assignment, assignment_, assignmentnode
        operator=''
        target ->
          NameNode()
            # identifiers: name, name_, namenode
            value='g'
        value ->
          IntNode()
            # identifiers: int, int_, intnode
            value='1'
    * BreakNode()
        # identifiers: break, break_, breaknode
    * EndlNode()
        # identifiers: endl, endl_, endlnode
        value='\n'
        indent=''
    * CommentNode()
        # identifiers: comment, comment_, commentnode
        value='# #8: invocation'
28 -----------------------------------------------------
DefNode()
  # identifiers: def, def_, defnode, funcdef, funcdef_
  # default test value: name
  name='t'
  decorators ->
  arguments ->
  value ->
    * PassNode()
        # identifiers: pass, pass_, passnode
    * EndlNode()
        # identifiers: endl, endl_, endlnode
        value='\n'
        indent=''
29 -----------------------------------------------------
AtomtrailersNode()
  # identifiers: atomtrailers, atomtrailers_, atomtrailersnode
  value ->
    * NameNode()
        # identifiers: name, name_, namenode
        value='t'
    * CallNode()
        # identifiers: call, call_, callnode
        value ->
30 -----------------------------------------------------
EndlNode()
  # identifiers: endl, endl_, endlnode
  value='\n'
  indent=''
[Finished in 6.0s]